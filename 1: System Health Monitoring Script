import psutil
import logging
from datetime import datetime


logging.basicConfig(filename='system_health.log', level=logging.INFO,
                    format='%(asctime)s - %(levelname)s - %(message)s')


CPU_THRESHOLD = 80  # in percentage
MEMORY_THRESHOLD = 80  # in percentage
DISK_THRESHOLD = 90  # in percentage

def log_alert(message):
    logging.info(message)
    print(message)

def check_cpu_usage():
    cpu_usage = psutil.cpu_percent(interval=1)
    if cpu_usage > CPU_THRESHOLD:
        log_alert(f"High CPU usage detected: {cpu_usage}%")

def check_memory_usage():
    memory = psutil.virtual_memory()
    if memory.percent > MEMORY_THRESHOLD:
        log_alert(f"High memory usage detected: {memory.percent}%")

def check_disk_usage():
    disk_usage = psutil.disk_usage('/')
    if disk_usage.percent > DISK_THRESHOLD:
        log_alert(f"Low disk space detected: {disk_usage.percent}%")

def check_running_processes():
    processes = [p.info for p in psutil.process_iter(attrs=['pid', 'name'])]
    log_alert(f"Running processes: {len(processes)}")
    for process in processes:
        log_alert(f"Process ID: {process['pid']}, Name: {process['name']}")

def main():
    check_cpu_usage()
    check_memory_usage()
    check_disk_usage()
    check_running_processes()

if __name__ == "__main__":
    main()
